[
    {
        "id": "main.flow",
        "type": "tab",
        "label": "main",
        "disabled": false,
        "info": ""
    },
    {
        "id": "test.flow",
        "type": "tab",
        "label": "test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5eb3cd61.894f04",
        "type": "Logger",
        "z": "main.flow",
        "name": "Log",
        "level": "INFO",
        "message": "{\"data\" : msg.payload } ",
        "format": "json",
        "headers": {},
        "x": 322.5,
        "y": 160,
        "wires": [
            [
                "f04e0240.077b7"
            ]
        ],
        "caname": "logger",
        "category": "logging"
    },
    {
        "id": "b5fc6ccd.17dd7",
        "type": "EventListener-End",
        "z": "main.flow",
        "name": "Success",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "payload": "{\"hello\": \"world\"}",
        "x": 842.5,
        "y": 160,
        "wires": [],
        "caname": "eventlistenerend",
        "category": "general"
    },
    {
        "id": "b970b7d2.5454c8",
        "type": "Assertion",
        "z": "test.flow",
        "name": "check response",
        "selector": "jsonBody",
        "property": "hello",
        "comparison": "equals",
        "value": "world",
        "x": 265,
        "y": 160,
        "wires": [
            [
                "e0721cc7.653eb"
            ]
        ],
        "caname": "test-assertion",
        "category": "testing"
    },
    {
        "id": "e0721cc7.653eb",
        "type": "TestCaseEnd",
        "z": "test.flow",
        "name": "TestCaseEnd",
        "x": 425,
        "y": 160,
        "wires": [],
        "caname": "test-case-end",
        "category": "testing"
    },
    {
        "id": "e8fb91dc.46c24",
        "type": "HTTPTestCase",
        "z": "test.flow",
        "name": "HTTPTestCase",
        "method": "GET",
        "path": "/test",
        "headers": {
            "Accept": "application/json"
        },
        "authtype": "none",
        "secUser": "",
        "secPassword": "",
        "secToken": "",
        "payload": "",
        "mocks": [],
        "x": 122.5,
        "y": 160,
        "wires": [
            [
                "b970b7d2.5454c8"
            ]
        ],
        "caname": "http-test-case",
        "category": "testing"
    },
    {
        "id": "d84e47d6.ee7748",
        "type": "JSON",
        "z": "main.flow",
        "name": "JSON",
        "property": "msg.payload",
        "action": "obj",
        "pretty": false,
        "x": 222.5,
        "y": 160,
        "wires": [
            [
                "5eb3cd61.894f04"
            ]
        ],
        "caname": "JSON",
        "category": "transformation"
    },
    {
        "id": "c413e4f4.6c8588",
        "type": "EventListener",
        "z": "main.flow",
        "name": "Recieve Event",
        "provider": "aws",
        "eventSource": "lambda",
        "dynamodbOperation": "",
        "apiMethod": "any",
        "apiUrl": "",
        "albMethod": "any",
        "albUrl": "",
        "bucketName": "",
        "event": "s3:ObjectCreated:*",
        "cognitoTrigger": "any",
        "reference": "",
        "queueName": "",
        "keventSource": "",
        "kapiMethod": "any",
        "kapiUrl": "",
        "kcronexpression": "",
        "kreference": "",
        "kObjectStoreOperation": "all",
        "kObjectStoreName": "",
        "zeventSource": "",
        "zapiMethod": "any",
        "zapiUrl": "",
        "x": 122.5,
        "y": 160,
        "wires": [
            [
                "d84e47d6.ee7748"
            ]
        ],
        "caname": "event-handler",
        "category": "general"
    },
    {
        "id": "f04e0240.077b7",
        "type": "Template",
        "z": "main.flow",
        "name": "Template",
        "field": "payload",
        "fieldType": "camsg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n<body>\n   Test data\n</body>\n</html>",
        "output": "str",
        "x": 442.5,
        "y": 160,
        "wires": [
            [
                "a5a8e404.7cae48"
            ]
        ],
        "caname": "template",
        "category": "transformation"
    },
    {
        "id": "4162cc58.4dfa14",
        "type": "S3",
        "z": "main.flow",
        "operation": "PutObject",
        "Bucket": "efsdemobucket",
        "Key": "test.pdf",
        "KeyType": "",
        "Content": "msg.payload",
        "ContentType": "application/pdf",
        "BucketType": "",
        "CopySource": "",
        "CopySourceType": "",
        "DestinationBucket": "",
        "DestinationBucketType": "",
        "DestinationKey": "",
        "DestinationKeyType": "",
        "Delete": "",
        "DeleteType": "",
        "AccessKey": "env.bucketkey",
        "AccessSecret": "env.bucketsecret",
        "Rolearn": "",
        "Region": "ap-southeast-2",
        "SecurityType": "Credentials",
        "ReqTimeout": "25000",
        "name": "S3",
        "x": 682.5,
        "y": 160,
        "wires": [
            [
                "4da00d51.cba274"
            ]
        ],
        "caname": "S3",
        "category": "aws"
    },
    {
        "id": "4da00d51.cba274",
        "type": "Logger",
        "z": "main.flow",
        "name": "Logger",
        "level": "INFO",
        "message": "msg.payload",
        "format": "json",
        "headers": {},
        "x": 762.5,
        "y": 160,
        "wires": [
            [
                "b5fc6ccd.17dd7"
            ]
        ],
        "caname": "logger",
        "category": "logging"
    },
    {
        "id": "47484a66.25ffd4",
        "type": "catch",
        "z": "main.flow",
        "name": "catch",
        "scope": null,
        "uncaught": false,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "a18c3c7a.810fc"
            ]
        ],
        "caname": "catch",
        "category": "exception"
    },
    {
        "id": "a18c3c7a.810fc",
        "type": "Logger",
        "z": "main.flow",
        "name": "Logger",
        "level": "INFO",
        "message": "msg.error",
        "format": "json",
        "headers": {},
        "x": 600,
        "y": 320,
        "wires": [
            [
                "26a97d81.b44822"
            ]
        ],
        "caname": "logger",
        "category": "logging"
    },
    {
        "id": "26a97d81.b44822",
        "type": "EventListener-End",
        "z": "main.flow",
        "name": "EventListener-End",
        "statusCode": "500",
        "responseType": "http",
        "headers": {
            "Content-Type": "application/json"
        },
        "payload": "msg.error",
        "eventPayload": "",
        "eventType": "success",
        "x": 742.5,
        "y": 320,
        "wires": [],
        "caname": "eventlistenerend",
        "category": "general"
    },
    {
        "id": "a5a8e404.7cae48",
        "type": "Function",
        "z": "main.flow",
        "name": "Function;",
        "noerr": 0,
        "query": "// Available objects in the context: msg, vars, env\n// Logging: node.log|info|warn|debug|error(\"message\")\n// Errors:  throw new Error('message') \nnode.info('test---')\nconst data = {\n    title: \"Hello World!\",\n    users: [\n      {\n          name: \"Shyam\",\n          age: \"26\",\n      },\n      {\n          name: \"Navjot\",\n          age: \"26\",\n      },\n      {\n          name: \"Vitthal\",\n          age: \"26\",\n      },\n    ]\n  };\n// The file buffer will be developed;\nconst pdf = require(\"html-pdf-lambda\");\npdf\n  .create(\"<html><body>test</body></html>\", data)\n  .then((res) => {\n    console.log(res);\n    msg.payload = res;\n    return msg;\n  })",
        "x": 542.5,
        "y": 160,
        "wires": [
            [
                "177ed425.5d313c"
            ]
        ],
        "caname": "function",
        "category": "transformation"
    },
    {
        "id": "5d902477.01423c",
        "type": "EventListener",
        "z": "main.flow",
        "name": "EventListener",
        "provider": "aws",
        "eventSource": "api",
        "dynamodbOperation": "",
        "apiMethod": "get",
        "apiUrl": "/test",
        "albMethod": "any",
        "albUrl": "",
        "bucketName": "",
        "event": "s3:ObjectCreated:*",
        "cognitoTrigger": "any",
        "reference": "",
        "queueName": "",
        "keventSource": "",
        "kapiMethod": "any",
        "kapiUrl": "",
        "kcronexpression": "",
        "kreference": "",
        "kObjectStoreOperation": "all",
        "kObjectStoreName": "",
        "zeventSource": "",
        "zapiMethod": "any",
        "zapiUrl": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "5eb3cd61.894f04"
            ]
        ],
        "caname": "event-handler",
        "category": "general"
    },
    {
        "id": "177ed425.5d313c",
        "type": "Logger",
        "z": "main.flow",
        "name": "Logger",
        "level": "INFO",
        "message": "msg.payload",
        "format": "json",
        "headers": {},
        "x": 602.5,
        "y": 160,
        "wires": [
            [
                "4162cc58.4dfa14"
            ]
        ],
        "caname": "logger",
        "category": "logging"
    }
]